// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Existing Docker Compose (Extend)",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}"
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/git:1": {} // Add this line to install Git
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		3000
	],
	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"Shopify.ruby-lsp", // For Ruby language server features
				"misogi.ruby-rubocop", // For RuboCop integration
				"rebornix.ruby", // For debugger integration (if you use it)
				"aki77.html-erb", // For syntax highlighting in ERB files
				"google.geminicodeassist",
				"connorshea.vscode-ruby-test-adapter", // running tests in side panel
				"hbenl.vscode-test-explorer", // For testing in Code platform
				"ms-vscode.test-adapter-converter", // Needed for test-explorer
				"ms-azuretools.vscode-docker" // Good for managing Docker directly in VS Code
				// Add any other extensions specific to this project, e.g., for YAML, GitLens, etc.
			]
		}
		// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
		// "remoteUser": "devcontainer"
	}